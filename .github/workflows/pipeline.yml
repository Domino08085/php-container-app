name: Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # ----------------------
  # 1) Static Code Analysis
  # ----------------------
  static-code-analysis:
    name: Static Code Analysis
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker images
        run: docker compose build

      - name: Update .env.dev file with secrets
        run: |
          echo "APP_ENV=${{ secrets.APP_ENV }}" >> .env.dev
          echo "APP_SECRET=${{ secrets.APP_SECRET }}" >> .env.dev
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env.dev
          echo "MESSENGER_TRANSPORT_DSN=${{ secrets.MESSENGER_TRANSPORT_DSN }}" >> .env.dev
          echo "REDIS_DSN=${{ secrets.REDIS_DSN }}" >> .env.dev
          cp .env.dev .env

      - name: Install dependencies
        run: docker compose run --rm app composer install

      - name: Run Tests
        run: docker compose run --rm app composer test

      - name: Run PHPStan (Static Analysis)
        run: docker compose run --rm app composer stan

      - name: Run Coding Standards
        run: docker compose run --rm app composer cs

  # ---------------------------
  # 2) Build & Tag Docker Image
  # ---------------------------
  build-and-tag-docker:
    name: Build and Tag Docker Image
    runs-on: ubuntu-latest
    needs: static-code-analysis

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker images
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/my-symfony-app:latest .
          docker build -t ${{ secrets.DOCKER_USERNAME }}/my-symfony-app:${{ github.sha }} .

      - name: Push Docker images
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/my-symfony-app:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/my-symfony-app:${{ github.sha }}